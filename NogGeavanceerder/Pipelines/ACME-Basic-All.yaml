trigger:
- master

pool: default

variables:
  - group: 'ACME-Basic'
  - name: serviceLink
    value: 'Private Azure'
  
stages:
- stage: Build
  displayName: 'Build Stage'
  variables:
    solution: '**/*.sln'
    testProjects: '**/*[Tt]ests*/*.csproj'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'
  jobs:
    - job: BuildJob
      displayName: 'Build Job'
      steps:
        - task: DotNetCoreCLI@2
          displayName: 'Restore NuGet Packages'
          inputs:
            command: 'restore'
            projects: '$(solution)'
            feedsToUse: 'select'
            includeNuGetOrg: true
            verbosityRestore: 'Detailed'
            verbosityPack: 'Detailed'
        - task: DotNetCoreCLI@2
          displayName: 'Build Solution'
          inputs:
            command: 'build'
            projects: '$(solution)'
            arguments: '--configuration $(buildConfiguration) --no-restore'
            versioningScheme: 'byBuildNumber'
        - task: DotNetCoreCLI@2
          displayName: 'Run Tests'
          inputs:
            command: 'test'
            projects: '$(solution)'
            arguments: '--configuration $(buildConfiguration) --no-build --logger trx'
            publishTestResults: true
            testRunTitle: 'ACME Build Pipeline Tests'
        - task: DotNetCoreCLI@2
          displayName: 'Publish Application'  
          inputs:
            command: 'publish'
            projects: '$(solution)'
            arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory) --no-build'
            publishWebProjects: false
            zipAfterPublish: true
        - task: CopyFiles@2
          displayName: 'Copy BICEP templates'
          inputs:
            SourceFolder: '$(Build.SourcesDirectory)'
            Contents: '**/*.bicep'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'
        - task: CopyFiles@2
          displayName: 'Copy Scripts'
          inputs:
            SourceFolder: '$(Build.SourcesDirectory)'
            Contents: '**/*.ps1'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'
        - task: PublishBuildArtifacts@1
          displayName: 'Publish Artifacts'
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
- stage: CreateResources
  displayName: 'Create Resources if not exists Stage'
  dependsOn: Build
  jobs:
   - job: CreateResourcesJob
     displayName: 'Create Resources Job'
     steps:
      - checkout: none
      - download: current
        artifact: drop
      - task: AzureCLI@2
        inputs:
          azureSubscription: 'Private Azure'
          scriptType: 'batch'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az group create -n $(Group) -l $(Region)
            az deployment group create -g $(Group) --template-file $(Pipeline.Workspace)/drop/ARM/webapp-basic.bicep --parameters app_name=$(AppName)
      - task: AzureResourceManagerTemplateDeployment@3
        inputs:
          deploymentScope: 'Resource Group'
          azureResourceManagerConnection: $(serviceLink)
          action: 'Create Or Update Resource Group'
          resourceGroupName: $(Group)
          location: $(Region)
          templateLocation: 'Linked artifact'
          csmFile: '$(Pipeline.Workspace)/drop/ARM/webapp-basic.bicep'
          overrideParameters: '-app_name $(AppName)'
          deploymentMode: 'Incremental'
- stage: Deployment
  dependsOn: CreateResources
  displayName: 'Deploy to Production'
  jobs:
    - job: DeployJob
      steps:
      - checkout: none
      - download: current
        artifact: drop
      - task: AzureWebApp@1
        displayName: 'Deploy to Azure Web App'
        inputs:
          azureSubscription: $(serviceLink)
          appType: 'webApp'
          appName: $(AppName)
          package: '$(Pipeline.Workspace)/drop/*.zip' 
          deploymentMethod: 'auto'
          resourceGroupName: $(Group)
          runtimeStack: 'DOTNETCORE|8.0'
          